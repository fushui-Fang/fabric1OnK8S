apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  namespace: orderer1
  name: orderer2
spec:
  replicas: 1
  strategy: {}
  template:
    metadata:
      labels:
        app: hyperledger
        role: orderer
        org: orderer1
        orderer-id: orderer2
    spec:
      containers:
      - name: orderer2
        image: hyperledger/fabric-orderer:x86_64-1.0.5
        env:
        - name: ORDERER_GENERAL_LOGLEVEL
          value: debug
        - name: ORDERER_GENERAL_LISTENADDRESS
          value: 0.0.0.0
        - name: ORDERER_GENERAL_GENESISMETHOD
          value: file
        - name: ORDERER_GENERAL_GENESISFILE
          value: /var/hyperledger/orderer/block/genesis.block
        - name: ORDERER_GENERAL_LOCALMSPID
          value: orderer1MSP
        - name: ORDERER_GENERAL_LOCALMSPDIR
          value: /var/hyperledger/orderer/msp
        - name: ORDERER_GENERAL_TLS_ENABLED
          value: "true"
        - name: ORDERER_GENERAL_TLS_PRIVATEKEY
          value: /var/hyperledger/orderer/tls/server.key
        - name: ORDERER_GENERAL_TLS_CERTIFICATE
          value: /var/hyperledger/orderer/tls/server.crt
        - name: ORDERER_GENERAL_TLS_ROOTCAS
          value: '[/var/hyperledger/orderer/tls/ca.crt, /var/hyperledger/orderer/tls/ca_p0o1.crt, /var/hyperledger/orderer/tls/ca_p1o1.crt, /var/hyperledger/orderer/tls/ca_p0o2.crt, /var/hyperledger/orderer/tls/ca_p1o2.crt]'
        - name: ORDERER_KAFKA_RETRY_SHORTINTERVAL
          value: "5s"
        - name: ORDERER_KAFKA_RETRY_SHORTTOTAL
          value: "30s"
        - name: ORDERER_KAFKA_VERBOSE
          value: "true"
        - name: ORDERER_KAFKA_BROKERS
          value: "[kafka0:9092,kafka1:9092,kafka2:9092]"
        workingDir: /opt/gopath/src/github.com/hyperledger/fabric/peer
        ports:
         - containerPort: 7050
        command: ["/bin/bash", "-c", "--"]
        args: ["sleep 15; orderer"]
        volumeMounts:
         - mountPath: /var/hyperledger/orderer/msp
           name: certificate
           subPath: orderers/orderer2.orderer1/msp
         - mountPath: /var/hyperledger/orderer/tls
           name: certificate
           subPath: orderers/orderer2.orderer1/tls
         - mountPath: /var/hyperledger/orderer/block
           name: certificate
           subPath: block
         - mountPath: /var/hyperledger/production
           name: certificate
           subPath: orderers/orderer2.orderer1/production
      volumes:
       - name: certificate
         persistentVolumeClaim:
             claimName: orderer1-shared

---

apiVersion: v1
kind: Service
metadata:
  name: orderer2
  namespace: orderer1
spec:
 selector:
   app: hyperledger
   role: orderer
   orderer-id: orderer2
   org: orderer1
 clusterIP: None
 ports:
   - name: listen-endpoint
     protocol: TCP
     port: 7050
     targetPort: 7050

---

apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: orderer2
  namespace: orderer1
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  rules:
  - http:
      paths:
      - path: /fabric/mycluster/orderer1/orderer2
        backend:
          serviceName: orderer2
          servicePort: 7050
---
