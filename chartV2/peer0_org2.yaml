apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  namespace: org2
  name:	peer0
spec:
  replicas: 1
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
       app: hyperledger
       role: peer
       peer-id: peer0
       org: org2
    spec:
      containers:
      - name: peer0 
        image: hyperledger/fabric-peer:x86_64-1.0.5
        env:
        - name: CORE_PEER_ADDRESSAUTODETECT
          value: "true"
        - name: CORE_VM_ENDPOINT
          value: "unix:///host/var/run/docker.sock"
        - name: CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE
          value: "bridge"
        #- name: CORE_VM_DOCKER_HOSTCONFIG_DNS
        #  value: "10.100.200.10"
        - name: CORE_LOGGING_LEVEL
          value: "DEBUG"
        - name: CORE_PEER_TLS_CERT_FILE
          value: "/etc/hyperledger/fabric/tls/server.crt" 
        - name: CORE_PEER_TLS_KEY_FILE
          value: "/etc/hyperledger/fabric/tls/server.key"
        - name: CORE_PEER_TLS_ROOTCERT_FILE
          value: "/etc/hyperledger/fabric/tls/ca.crt"
        - name: CORE_LOGGING_LEVEL
          value: "DEBUG"
        - name: CORE_PEER_TLS_ENABLED
          value: "true"
        - name: CORE_PEER_GOSSIP_USELEADERELECTION
          value: "true"
        - name: CORE_PEER_GOSSIP_ORGLEADER
          value: "false"
        - name: CORE_PEER_PROFILE_ENABLED
          value: "false"
        - name: CORE_PEER_ID
          value: peer0.org2
        - name: CORE_PEER_ADDRESS
          value: peer0.org2:7051
        - name: CORE_PEER_LOCALMSPID
          value: org2MSP
        - name: CORE_PEER_GOSSIP_EXTERNALENDPOINT
          value: peer0.org2:7051
        - name: CORE_CHAINCODE_STARTUPTIMEOUT
          value: "100s"
        - name: CORE_CHAINCODE_LOGGING_LEVEL
          value: "DEBUG"
        - name: CORE_PEER_GOSSIP_SKIPHANDSHAKE
          value: "true"
        - name: CORE_PEER_MSPCONFIGPATH
          value: "/etc/hyperledger/fabric/msp"
        - name: CORE_PEER_TLS_SERVERHOSTOVERRIDE
          value: peer0.org2
        workingDir: /opt/gopath/src/github.com/hyperledger/fabric/peer
        ports:
         - containerPort: 7051
         - containerPort: 7052
         - containerPort: 7053
        command: ["/bin/bash", "-c", "--"]
        args: ["sleep 5; peer node start"]
        volumeMounts:
         - mountPath: /etc/hyperledger/fabric/msp 
           name: certificate
           subPath: peers/peer0.org2/msp
         - mountPath: /etc/hyperledger/fabric/tls
           name: certificate
           subPath: peers/peer0.org2/tls
         - mountPath: /var/hyperledger/production
           name: certificate
           subPath: peers/peer0.org2/production
         - mountPath: /host/var/run
           name: run
      volumes:
       - name: certificate
         persistentVolumeClaim:
             claimName: org2-shared
       - name: run
         hostPath:
           path: /var/run
       

---

apiVersion: v1
kind: Service
metadata:
  namespace: org2
  name: peer0
spec:
  selector:
    app: hyperledger
    role: peer
    peer-id: peer0
    org: org2
  ports:
    - name: externale-listen-endpoint
      protocol: TCP
      port: 7051
      targetPort: 7051
    - name: chaincode-listen
      protocol: TCP
      port: 7052
      targetPort: 7052
    - name: listen
      protocol: TCP
      port: 7053
      targetPort: 7053

---

apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: peer0
  namespace: org2
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  rules:
  - http:
      paths:
      - path: /fabric/mycluster/org2/peer0
        backend:
          serviceName: peer0
          servicePort: 7051
---